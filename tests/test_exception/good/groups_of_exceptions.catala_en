## Test

```catala
declaration scope Foo:
  input y content integer
  output x content integer

scope Foo:
  label base definition x under condition
    y = 0
  consequence equals 0

  label base definition x under condition
    y = 1
  consequence equals 1

  label intermediate exception base definition x under condition
    y = 2
  consequence equals 2

  label intermediate exception base definition x under condition
    y = 3
  consequence equals 3

  exception intermediate definition x under condition
    y = 4
  consequence equals 4

  exception intermediate definition x under condition
    y = 5
  consequence equals 5
```

```catala-test-inline
$ catala Scopelang
struct Foo = {
  x: integer
}

let scope Foo (y: integer|input) (x: integer|internal|output) =
  let x : integer =
    ⟨ ⟨ ⟨ ⟨y = 4 ⊢ 4⟩, ⟨y = 5 ⊢ 5⟩ | false ⊢ ∅ ⟩
        | true
          ⊢ ⟨ ⟨y = 2 ⊢ 2⟩, ⟨y = 3 ⊢ 3⟩ | false ⊢ ∅ ⟩ ⟩
    | true ⊢ ⟨ ⟨y = 0 ⊢ 0⟩, ⟨y = 1 ⊢ 1⟩ | false ⊢ ∅ ⟩ ⟩
```
