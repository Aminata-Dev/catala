```catala
declaration structure Test:
    data z2 content integer
    data z3 content integer

declaration scope SubFoo:
  input x content integer
  input y content integer
  output z1 content integer
  output z2 content integer

declaration scope Foo:
  output example content integer

scope SubFoo:
  definition z1 equals x + y
  definition z2 equals x - y

scope Foo:
  definition example equals
    if true or false then
      let results_foo equals output of SubFoo with { -- x: 1 -- y: 2 } in
      results_foo.z1 + 1 * (output of SubFoo with { -- x: 10 -- y: 20 }).z2
    else 0
```

```catala-test-inline
$ catala interpret -s Foo
[WARNING] The field "z2" of struct "Test" is never used; maybe it's unnecessary?

┌─⯈ tests/test_scope/good/scope_call.catala_en:3.9-11:
└─┐
3 │     data z2 content integer
  │          ‾‾

[WARNING] The field "z3" of struct "Test" is never used; maybe it's unnecessary?

┌─⯈ tests/test_scope/good/scope_call.catala_en:4.9-11:
└─┐
4 │     data z3 content integer
  │          ‾‾

[RESULT] Computation successful! Results:
[RESULT] example = -7
```
