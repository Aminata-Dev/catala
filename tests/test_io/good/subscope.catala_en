## Test

```catala
declaration scope A:
  context a content integer
  input b content integer
  output c content integer
  internal d content integer

declaration scope B:
  a scope A

scope A:
  definition a equals 0
  definition c equals b + d
  definition d equals 1 + a

scope B:
  definition a.b equals 2
  assertion a.c = 1
```

```catala-test-inline
$ catala Dcalc -s B
let B =
  λ (B_in_32: B_in{}) →
    let a.a_33 : unit → integer = λ (__34: unit) → ∅  in
    let a.b_35 : integer = error_empty ⟨true ⊢ 2⟩ in
    let result_36 : A_out{"c_out": integer} =
      A_17 (A_in {"a_in"= a.a_33; "b_in"= a.b_35}) in
    let a.c_37 : integer = result_36."c_out" in
    let __38 : unit = assert (error_empty a.c_37 = 1) in
    B_out {}
```

```catala-test-inline
$ catala Typecheck -s B
[RESULT] Typechecking successful!
```
