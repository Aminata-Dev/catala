## Test

```catala
declaration scope A:
  context a content integer
  input b content integer
  output c content integer
  internal d content integer

declaration scope B:
  a scope A

scope A:
  definition a equals 0
  definition c equals b + d
  definition d equals 1 + a

scope B:
  definition a.b equals 2
  assertion a.c = 1
```

```catala-test-inline
$ catala Dcalc -s B
let B =
  λ (B_in: B_in {}) →
    let a.a : unit → integer = λ (_: unit) → ∅  in
    let a.b : integer = error_empty ⟨true ⊢ 2⟩ in
    let result : A {"c": integer} = A (A_in {"a_in"= a.a; "b_in"= a.b}) in
    let a.c : integer = result."c" in
    let _ : unit = assert (error_empty a.c = 1) in
    B {}
```

```catala-test-inline
$ catala Typecheck -s B
[RESULT] Typechecking successful!
```
