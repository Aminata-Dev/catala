## Test

```catala
declaration scope A:
  internal a content integer
  output b content integer
  input c content integer
  input output d content integer
  context e content integer
  context output f content integer


scope A:
  definition a equals 0
  definition b equals a + 1
  definition e equals b + c + d + 1
  definition f equals e + 1
```

```catala-test-inline
$ catala Dcalc -s A
let A =
  λ (A_in_29: A_in{"c_in": integer; "d_in": integer; "e_in":
                 unit → integer; "f_in": unit → integer}) →
    let c_30 : integer = A_in_29."c_in" in
    let d_31 : integer = A_in_29."d_in" in
    let e_32 : unit → integer = A_in_29."e_in" in
    let f_33 : unit → integer = A_in_29."f_in" in
    let a_34 : integer = error_empty ⟨true ⊢ 0⟩ in
    let b_35 : integer = error_empty ⟨true ⊢ a_34 + 1⟩ in
    let e_36 : integer = error_empty
      ⟨e_32 () | true ⊢ ⟨true ⊢ b_35 + c_30 + d_31 + 1⟩⟩ in
    let f_37 : integer = error_empty
      ⟨f_33 () | true ⊢ ⟨true ⊢ e_36 + 1⟩⟩ in
    A_out {"b_out"= b_35; "d_out"= d_31; "f_out"= f_37}
```

```catala-test-inline
$ catala Typecheck -s A
[RESULT] Typechecking successful!
```
