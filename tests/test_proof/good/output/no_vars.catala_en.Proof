[RESULT] For this variable:
 --> test_proof/good/no_vars.catala_en
  | 
5 |   context x content integer
  |           ^
  + Test
This verification condition was generated for no two exceptions to ever overlap:
true && true &&
  true &&
    true && true && true && true && true && true && true && true && true &&
      true && true && true && true && true && true && true && ~ false &&
    true && true && true && ~ false && true && true && ~ false &&
    true && true && true && ~ false && true && true && true && ~ false &&
      true && true && ~ false && true && ~ false && true
[RESULT] The translation to Z3 is the following:
(and (and true true)
     true
     (and true true (and true true) true)
     (and true true)
     (and true true)
     (and true true (and true true) true)
     true
     true
     (not false)
     (and true (and (and true true) (not false)))
     (and (and true true) (not false))
     (and true (and (and true true) (not false)))
     (and true (and (and true true) (not false)))
     (and (and true true) (not false))
     true
     (not false)
     true)
[RESULT] For this variable:
 --> test_proof/good/no_vars.catala_en
  | 
5 |   context x content integer
  |           ^
  + Test
This verification condition was generated for the variable definition never to return an empty error:
if true then
  if true then
    if false then false else false && true && true ||
      if false then false else false && true && true else false &&
    true && true ||
    if true then
      if false then false else false && true && true ||
        if 6 * 7 = 42 && false || true && 1458 / 27 = 54 then true else false
          &&
          true && true && true && true && true && true && true &&
            true && true && true && true && true && true && true && true &&
            true else false && true && true else false && true || false &&
  true
[RESULT] The translation to Z3 is the following:
(let ((a!1 (and (=> false false) (=> (not false) false) (and true true)))
      (a!2 (or false (and true (= (div 1458 27) 54)))))
(let ((a!3 (=> (and (= (* 6 7) 42) a!2) true))
      (a!4 (not (and (= (* 6 7) 42) a!2))))
(let ((a!5 (or a!1
               (and a!3
                    (=> a!4 false)
                    (and true true (and true true) true)
                    (and true true)
                    (and true true)
                    (and true true (and true true) true)
                    true
                    true))))
(let ((a!6 (or (and (=> true (or a!1 a!1))
                    (=> (not true) false)
                    (and true true))
               (and (=> true a!5) (=> (not true) false) (and true true)))))
(let ((a!7 (or (and (=> true a!6) (=> (not true) false) true) false)))
  (and a!7 true))))))
[RESULT] Success: Empty unreachable
